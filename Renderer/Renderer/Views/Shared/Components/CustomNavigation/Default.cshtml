@using Progress.Sitefinity.AspNetCore.Widgets.Models.Navigation
@using Renderer.ViewModels
@model CustomNavigationViewModel
@functions {
    bool IsDirectParentOfActive(PageViewModel node)
    {
        if (node.ChildNodes == null || !node.ChildNodes.Any())
            return false;

        foreach (var child in node.ChildNodes)
        {
            if (child.IsCurrentlyOpened)
                return true;

            if (child.ChildNodes != null && child.ChildNodes.Any(grandChild => grandChild.IsCurrentlyOpened))
                return true;
        }
        return false;
    }

    bool IsActiveOrDirectParent(PageViewModel node)
    {
        return node.IsCurrentlyOpened || IsDirectParentOfActive(node);
    }
}
<nav class="@Model.WrapperCssClass custom-mega-navbar">
    <div class="container">
        <ul class="nav-list">
            @foreach (var node in Model.Nodes)
            {
                <li class="navigation-item position-relative">
                    <a class="navigation-link px-3 py-2 d-inline-block @(IsActiveOrDirectParent(node) ? "active" : "")"  href="@node.Url">
                        @node.Title
                    </a>
                    @if (node.ChildNodes?.Count > 0)
                    {
                        <ul class="navigation-dropdown-menu shadow py-2">
                            @foreach (var child in node.ChildNodes)
                            {
                                <li class="navigation-item position-relative">
                                    <a class="dropdown-item @(child.IsCurrentlyOpened || (child.ChildNodes != null && child.ChildNodes.Any(gc => gc.IsCurrentlyOpened)) ? "active" : "")" href="@child.Url">
                                        @child.Title
                                    </a>
                                    @if (child.ChildNodes?.Count > 0)
                                    {
                                        <ul class="navigation-dropdown-menu sub-menu shadow py-2">
                                            @foreach (var grandChild in child.ChildNodes)
                                            {
                                                <li class="navigation-item">
                                                    <a class="dropdown-item @(grandChild.IsCurrentlyOpened ? "active" : "")" href="@grandChild.Url">
                                                        @grandChild.Title
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </li>
            }
        </ul>
    </div>
</nav>